DROP TABLE IF EXISTS SYS_USER;

CREATE TABLE SYS_USER
(
   SEQ_ID               BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '自增主键',
   USER_ID              VARCHAR(20) NOT NULL COMMENT '用户编号',
   USERNAME             VARCHAR(20) NOT NULL COMMENT '用户名',
   PASSWORD             VARCHAR(50) NOT NULL COMMENT '密码',
   MOBILE               VARCHAR(11) COMMENT '手机号',
   ADDRESS              VARCHAR(200) COMMENT '地址',
   STATUS               CHAR(2) COMMENT '状态',
   IS_DELETE            CHAR(2) NOT NULL COMMENT '数据状态 Y/N',
   CREATE_TIME          DATETIME NOT NULL COMMENT '创建时间',
   UPDATE_TIME          DATETIME COMMENT '更新时间',
   COMMENTS             VARCHAR(200) COMMENT '备注',
   PRIMARY KEY (SEQ_ID)
);

ALTER TABLE SYS_USER COMMENT '用户表';

CREATE UNIQUE INDEX `UNI_MUI_IDX_SYS_USER#USERID&ISDELETE` ON SYS_USER
(
   USER_ID,
   IS_DELETE
);




DROP TABLE IF EXISTS SYS_ROLE;

CREATE TABLE SYS_ROLE
(
   SEQ_ID               BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
   ROLE_CODE            VARCHAR(80) NOT NULL COMMENT '角色代码',
   ROLE_NAME            VARCHAR(50) NOT NULL COMMENT '角色名称',
   ROLE_DESC            VARCHAR(255) COMMENT '角色描述',
   CREATOR              VARCHAR(20) NOT NULL COMMENT '创建人',
   UPDATER              VARCHAR(20) COMMENT '修改人',
   IS_DELETE            CHAR(2) NOT NULL COMMENT '数据状态 Y/N',
   CREATE_TIME          DATETIME NOT NULL COMMENT '创建时间',
   UPDATE_TIME          DATETIME COMMENT '更新时间',
   COMMENTS             VARCHAR(200) COMMENT '备注',
   PRIMARY KEY (SEQ_ID)
);

ALTER TABLE SYS_ROLE COMMENT '角色表';

CREATE UNIQUE INDEX `UNI_MUI_IDX_SYS_ROLE#ROLECODE&ISDELETE` ON SYS_ROLE
(
   ROLE_CODE,
   IS_DELETE
);



DROP TABLE IF EXISTS SYS_RESOURCE;

CREATE TABLE SYS_RESOURCE
(
   SEQ_ID               BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
   RES_CODE             VARCHAR(80) NOT NULL COMMENT '资源编码',
   RES_NAME             VARCHAR(50) NOT NULL COMMENT '资源名称',
   RES_URL              VARCHAR(200) COMMENT '资源路径(相对路径)',
   PARENT_CODE          VARCHAR(80) NOT NULL COMMENT '父编号、最上级的父编号为0',
   RES_DESC             VARCHAR(255) COMMENT '资源描述',
   RES_ICON             VARCHAR(50) COMMENT '菜单图标',
   RES_TYPE             VARCHAR(20) COMMENT '资源类型',
   SEQUENCE             BIGINT(9) NOT NULL COMMENT '菜单排列顺序',
   CREATOR              VARCHAR(20) COMMENT '创建人',
   UPDATER              VARCHAR(20) COMMENT '修改人',
   IS_DELETE            CHAR(2) NOT NULL COMMENT '数据状态 Y/N',
   CREATE_TIME          DATETIME NOT NULL COMMENT '创建时间',
   UPDATE_TIME          DATETIME COMMENT '更新时间',
   COMMENTS             VARCHAR(200) COMMENT '备注',
   PRIMARY KEY (SEQ_ID)
);

ALTER TABLE SYS_RESOURCE COMMENT '权限表';

CREATE UNIQUE INDEX `UNI_MUI_IDX_SYS_RESOURCE#RES_CODE&ISDELETE` ON SYS_RESOURCE
(
   RES_CODE,
   IS_DELETE
);



DROP TABLE IF EXISTS SYS_USER_ROLE;

CREATE TABLE SYS_USER_ROLE
(
   SEQ_ID               BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '自增主键',
   USER_ID              VARCHAR(20) NOT NULL COMMENT '用户Id',
   ROLE_CODE            VARCHAR(80) NOT NULL COMMENT '角色编码',
   IS_DELETE            CHAR(2) NOT NULL COMMENT '数据状态 Y/N',
   CREATE_TIME          DATETIME NOT NULL COMMENT '创建时间',
   UPDATE_TIME          DATETIME COMMENT '更新时间',
   COMMENTS             VARCHAR(200) COMMENT '备注',
   PRIMARY KEY (SEQ_ID)
);

ALTER TABLE SYS_USER_ROLE COMMENT '用户角色关联表';

CREATE UNIQUE INDEX `UNI_MUI_SYS_USER_ROLE#USERID&ROLECODE&ISDELETE` ON SYS_USER_ROLE
(
   USER_ID,
   ROLE_CODE,
   IS_DELETE
);



DROP TABLE IF EXISTS SYS_ROLE_RESOURCE;

CREATE TABLE SYS_ROLE_RESOURCE
(
   SEQ_ID               BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '自增主键',
   ROLE_CODE            VARCHAR(80) NOT NULL COMMENT '角色编码',
   RES_CODE             VARCHAR(80) NOT NULL COMMENT '资源编码',
   IS_DELETE            CHAR(2) NOT NULL COMMENT '数据状态 Y/N',
   CREATE_TIME          DATETIME NOT NULL COMMENT '创建时间',
   UPDATE_TIME          DATETIME COMMENT '更新时间',
   COMMENTS             VARCHAR(200) COMMENT '备注',
   PRIMARY KEY (SEQ_ID)
);

ALTER TABLE SYS_ROLE_RESOURCE COMMENT '角色权限关联表';

CREATE UNIQUE INDEX UNI_MUI_IDX_SYS_ROLE_RESOURCE ON SYS_ROLE_RESOURCE
(
   ROLE_CODE,
   RES_CODE,
   IS_DELETE
);
